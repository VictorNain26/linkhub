name: CI + Migrate + Deploy

on:
  push:
    branches: [main]
  pull_request:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # ─────────────────────────── BUILD ─
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v2
        with:
          version: 10.12.3           # version PNPM figée
          run_install: false

      - uses: actions/setup-node@v4
        with:
          node-version: 22           # version Node figée
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml

      - run: pnpm install --frozen-lockfile
      - run: pnpm lint
      - run: pnpm tsc --noEmit
      - run: pnpm test --run
      - run: pnpm build
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}

  # ──────────────────────── MIGRATE (prod) ─
  migrate:
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v2
        with:
          version: 10.12.3
          run_install: false

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml

      - run: pnpm add -D prisma @prisma/client

      - name: Deploy Prisma migrations
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: pnpm dlx prisma migrate deploy

  # ─────────────────────────── DEPLOY ─
  deploy:
    needs: [build, migrate]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: production
    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v2
        with:
          version: 10.12.3
          run_install: false

      - uses: actions/setup-node@v4
        with:
          node-version: 22

      - run: pnpm add -g vercel@latest

      - name: Vercel ▸ pull config
        run: |
          vercel pull --yes --environment=production --token $VERCEL_TOKEN

      - name: Vercel ▸ build
        run: vercel build --prod

      - name: Vercel ▸ deploy
        run: vercel deploy --prebuilt --prod --yes --token $VERCEL_TOKEN

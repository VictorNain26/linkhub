name: CI + Migrate + Deploy

on:
  push:
    branches: [main]
  pull_request:

concurrency: ci-${{ github.ref }}   # 1 seul run par branche

env:
  # Versions centralisées ───────────
  NODE_VERSION: 22
  PNPM_VERSION: 10.12.3              # ← même version que dans package.json

# ──────────────────────────────────────────── JOB : BUILD ──
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Installe pnpm 10.12.3 et l'ajoute au PATH
      - uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: false

      # Installe Node + cache pnpm basé sur pnpm-lock.yaml
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml

      # Dépendances
      - run: pnpm install --frozen-lockfile

      # Lint / TS / tests / build
      - run: pnpm lint
      - run: pnpm tsc --noEmit
      - run: pnpm test -- --run
      - run: pnpm build
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}

# ───────────────────────────────────────── JOB : MIGRATE ──
  migrate:
    needs: build
    if: github.ref == 'refs/heads/main'          # migrations seulement sur main
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: false
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml

      # Ajoute Prisma CLI (léger) pour ce job
      - run: pnpm add -D prisma @prisma/client

      - name: Deploy Prisma migrations
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: pnpm dlx prisma migrate deploy

# ───────────────────────────────────────── JOB : DEPLOY ──
  deploy:
    needs: [build, migrate]
    runs-on: ubuntu-latest
    permissions:
      deployments: write
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: false
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - run: pnpm add -g vercel@latest

      - name: Deploy to Vercel (production)
        env:
          VERCEL_TOKEN:  ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: vercel deploy --prod --yes
